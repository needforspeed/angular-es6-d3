{"version":3,"sources":["webpack:///angular-es6-d3.js","webpack:///webpack/bootstrap d33708d51006c3c2d764","webpack:///./src/pie/index.js","webpack:///./~/d3/build/d3.js","webpack:///./src/d3.js","webpack:///./src/index.js","webpack:///./src/pie/pie.component.js","webpack:///./src/pie/pie.controller.js","webpack:///./src/pie/pie.html"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_d","_d2","obj","default","_pie","angular","component","PieComponent","selector","global","factory","this","ascendingComparator","f","x","ascending","pair","a","b","tickStep","start","stop","count","step0","Math","abs","max","step1","pow","floor","log","LN10","error","e10","e5","e2","length","translateX","translateY","y","center","scale","offset","bandwidth","round","entering","__axis","axis","orient","context","values","tickValues","ticks","apply","tickArguments","domain","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range","range0","range1","position","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","k","top","bottom","transition","epsilon","isFinite","transform","getAttribute","parentNode","remove","left","right","tickSizeOuter","filter","each","_","arguments","slice$1","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","Error","Dispatch","parseTypenames","typenames","types","trim","split","map","indexOf","type","set","callback","noop","concat","push","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","on","__on","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","Array","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","root","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","id","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","defaultView","getComputedStyle","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","svg","ownerSVGElement","width","height","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","undefined","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","step","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","point$2","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","hi","mid","ascendingBisect","bisectLeft","pairs","cross","ia","ib","ic","na","nb","descending","number","variance","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","random","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","define","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","brighter","darker","PI","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","TypeError","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","amplitude","period","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","buffer","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","x$$1","y$$1","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","temp","valueOf","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential$1","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","constant$10","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$5","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","randomUniform","randomLogNormal","randomBates","randomExponential","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","newObj","_pie2","_interopRequireDefault","_pie3","_pie4","bindings","iradius","controller","controllerAs","template","_classCallCheck","instance","Constructor","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","PieController","$element","D3Factory","tooltip","$inject","_this","currentValue","jsonData","percent","layerY","layerX"],"mappings":"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","file":"angular-es6-d3.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d = __webpack_require__(2);\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _pie = __webpack_require__(4);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = angular.module('angular.d3.pie', [_d2.default]).component(_pie.PieComponent.selector, _pie.PieComponent).name;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.7.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.4\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _d = __webpack_require__(1);\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = angular.module('angular.d3.wrapper', []).factory('D3Factory', function () {\n  return d3;\n}).name;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _pie = __webpack_require__(0);\n\nvar _pie2 = _interopRequireDefault(_pie);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nangular.module('angular.es6.d3', [_pie2.default]);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PieComponent = undefined;\n\nvar _pie = __webpack_require__(5);\n\nvar _pie2 = _interopRequireDefault(_pie);\n\nvar _pie3 = __webpack_require__(6);\n\nvar _pie4 = _interopRequireDefault(_pie3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PieComponent = exports.PieComponent = {\n  bindings: {\n    data: '<',\n    key: '<',\n    value: '<',\n    width: '<',\n    height: '<',\n    iradius: '<'\n  },\n  controller: _pie2.default,\n  controllerAs: 'pieCtrl',\n  selector: 'pieChart',\n  template: _pie4.default\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PieController = function () {\n  /* @ngInject */\n  PieController.$inject = [\"$element\", \"D3Factory\"];\n  function PieController($element, D3Factory) {\n    _classCallCheck(this, PieController);\n\n    this.name = 'Pie';\n    this.d3 = D3Factory;\n    this.svg = this.d3.select($element[0]).append('svg');\n\n    this.g = this.svg.append('g');\n\n    this.tooltip = this.d3.select($element[0]).append('div').attr('class', 'tooltip');\n  }\n\n  _createClass(PieController, [{\n    key: '$onChanges',\n    value: function $onChanges(change) {\n      var _this = this;\n\n      if (!change.data.currentValue) {\n        return;\n      }\n\n      this.svg.attr('width', this.width).attr('height', this.height);\n\n      this.g.attr('transform', 'translate(' + this.width / 2 + ', ' + this.height / 2 + ')');\n\n      var radius = Math.min(this.width, this.height) / 2;\n      var color = this.d3.scaleOrdinal(this.d3.schemeCategory20);\n      var pie = this.d3.pie().sort(null).value(function (d) {\n        return d[_this.value];\n      });\n\n      var path = this.d3.arc().innerRadius(this.iradius).outerRadius(radius - this.iradius);\n\n      this.tooltip.append('div').attr('class', 'label');\n\n      this.tooltip.append('div').attr('class', this.value);\n\n      this.tooltip.append('div').attr('class', 'percent');\n\n      var jsonData = angular.copy(this.data);\n\n      var arc = this.g.selectAll('.arc').data(pie(jsonData)).enter().append('g').attr('class', 'arc');\n\n      arc.append('path').attr('d', path).attr('fill', function (d) {\n        return color(d.data[_this.key]);\n      });\n\n      arc.on('mouseover', function (d) {\n        var total = _this.d3.sum(jsonData.map(function (d) {\n          return d[_this.value];\n        }));\n        var percent = Math.round(1000 * d.data[_this.value] / total) / 10;\n        _this.tooltip.select('.label').html(d.data[_this.key]);\n        _this.tooltip.select('.' + _this.value).html(d.data[_this.value]);\n        _this.tooltip.select('.percent').html(percent + '%');\n        _this.tooltip.style('display', 'block');\n      });\n\n      arc.on('mouseout', function () {\n        _this.tooltip.style('display', 'none');\n      });\n\n      // optional\n      arc.on('mousemove', function () {\n        _this.tooltip.style('top', _this.d3.event.layerY + 10 + 'px').style('left', _this.d3.event.layerX + 10 + 'px');\n      });\n    }\n  }]);\n\n  return PieController;\n}();\n\nexports.default = PieController;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div>{{pieCtrl.name}}</div>\\n\"\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// angular-es6-d3.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d33708d51006c3c2d764","import d3 from '../d3';\nimport { PieComponent } from './pie.component';\n\nexport default angular.module('angular.d3.pie', [d3]).\ncomponent(PieComponent.selector, PieComponent).\nname;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pie/index.js","// https://d3js.org Version 4.7.4. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.4\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 1\n// module chunks = 0","import * as d3 from 'd3';\n\nexport default angular.module('angular.d3.wrapper', [])\n.factory('D3Factory', () => d3)\n.name;\n\n\n\n// WEBPACK FOOTER //\n// ./src/d3.js","import pie from './pie';\n\nangular.module('angular.es6.d3', [pie]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import PieController from './pie.controller';\nimport template from './pie.html';\n\nexport const PieComponent = {\n  bindings: {\n    data: '<',\n    key: '<',\n    value: '<',\n    width: '<',\n    height: '<',\n    iradius: '<'\n  },\n  controller: PieController,\n  controllerAs: 'pieCtrl',\n  selector: 'pieChart',\n  template\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pie/pie.component.js","export default class PieController {\n  /* @ngInject */\n  constructor($element, D3Factory) {\n    this.name = 'Pie';\n    this.d3 = D3Factory;\n    this.svg = this.d3.select($element[0])\n      .append('svg');\n\n    this.g = this.svg.append('g');\n\n    this.tooltip = this.d3.select($element[0])\n      .append('div')\n      .attr('class', 'tooltip');\n  }\n\n  $onChanges(change) {\n    if(!change.data.currentValue) {\n      return;\n    }\n\n    this.svg\n      .attr('width', this.width)\n      .attr('height', this.height);\n\n    this.g\n      .attr('transform', `translate(${this.width / 2}, ${this.height / 2})`);\n\n    const radius = Math.min(this.width, this.height) / 2;\n    const color = this.d3.scaleOrdinal(this.d3.schemeCategory20);\n    const pie = this.d3.pie()\n      .sort(null)\n      .value(d => d[this.value]);\n\n    const path = this.d3.arc()\n      .innerRadius(this.iradius)\n      .outerRadius(radius - this.iradius);\n\n    this.tooltip.append('div')\n      .attr('class', 'label');\n\n    this.tooltip.append('div')\n      .attr('class', this.value);\n\n    this.tooltip.append('div')\n      .attr('class', 'percent');\n\n\n    const jsonData = angular.copy(this.data);\n\n    let arc = this.g.selectAll('.arc')\n      .data(pie(jsonData))\n      .enter().append('g')\n      .attr('class', 'arc');\n\n    arc.append('path')\n      .attr('d', path)\n      .attr('fill', d => color(d.data[this.key]));\n\n    arc.on('mouseover', d => {\n      let total = this.d3.sum(jsonData.map(d => d[this.value]));\n      let percent = Math.round(1000 * d.data[this.value] / total) / 10;\n      this.tooltip.select('.label').html(d.data[this.key]);\n      this.tooltip.select(`.${this.value}`).html(d.data[this.value]);\n      this.tooltip.select('.percent').html(`${percent}%`);\n      this.tooltip.style('display', 'block');\n    });\n\n    arc.on('mouseout', () => {\n      this.tooltip.style('display', 'none');\n    });\n\n    // optional\n    arc.on('mousemove', () => {\n      this.tooltip.style('top', (this.d3.event.layerY + 10) + 'px')\n        .style('left', (this.d3.event.layerX + 10) + 'px');\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pie/pie.controller.js","module.exports = \"<div>{{pieCtrl.name}}</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pie/pie.html\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}